## ✅ Key Concepts

| Term              | Definition |
|-------------------|------------|
| **High Availability** | Ensures that services/apps remain accessible and operational during failures or disruptions. |
| **Scalability**        | Ability to increase or decrease resources to meet demand. |

---

## ☁️ High Availability (HA)

- Ensures your app or service is **available when needed**
- Designed to handle **disruptions**, maintenance, or load spikes
- Enforced through Azure **SLAs (Service Level Agreements)**

---

## 🚀 Scalability

- **Scale up/down** based on actual usage
- Supports cost-efficiency: pay for what you need
- Two types:

### 🔼 Vertical Scaling (Scale Up/Down)
- Increase/decrease capacity of a **single resource**
  - e.g., Add more CPU/RAM to a VM
- Pros: Simple
- Cons: Limited ceiling

### 🔁 Horizontal Scaling (Scale Out/In)
- Add/remove **instances of a resource**
  - e.g., Add more VMs or containers
- Pros: Great for web apps, APIs, microservices
- Can be **manual or automatic**

---

## 🧠 Summary

| Feature | High Availability | Scalability |
|---------|-------------------|-------------|
| Goal    | Maximize uptime   | Match resource supply to demand |
| Example | Redundant VMs in different zones | Add/remove containers dynamically |
| Benefit | User trust, reliability | Performance, cost-efficiency |

---
# 🔄 AZ-900 – Reliability and Predictability in the Cloud

## ✅ Key Definitions

| Term         | Meaning |
|--------------|---------|
| **Reliability** | The ability of a system to **recover from failures** and keep functioning. |
| **Predictability** | The ability to **anticipate system performance and costs**, ensuring consistency and confidence. |

---

## 🔒 Reliability

- Supported by the **decentralized design** of the cloud.
- Resources can be deployed in **multiple regions** around the world.
- Global redundancy = system resilience against **regional failures**.
- Azure may **automatically reroute services** if a region fails.
- It's one of the pillars of the **Azure Well-Architected Framework**.

---

## 📈 Predictability

### 💡 Performance Predictability
- Uses tools like:
  - **Autoscaling** – Add/remove resources based on real-time load
  - **Load Balancing** – Distribute traffic across servers/services
  - **High Availability** – Ensures uptime across zones

### 💰 Cost Predictability
- Real-time usage tracking and forecasting
- Tools like:
  - **Azure Pricing Calculator**
  - **TCO Calculator**
  - **Azure Cost Management + Budgets**
- Cloud analytics help **predict spend patterns** and optimize costs

---

## 🧠 Summary

| Benefit | What It Enables |
|---------|-----------------|
| Reliability | Systems keep working through failures (global resilience) |
| Performance Predictability | Users get consistent experience during scaling events |
| Cost Predictability | Teams can estimate, monitor, and control cloud expenses |

---
